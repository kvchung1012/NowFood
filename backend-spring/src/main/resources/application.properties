# Server Properties
server.port=8081
# Context path of the application.
#server.servlet.context-path=/sample
#spring.data.rest.base-path=/api

# Config mysql db
#localhost
spring.datasource.url=jdbc:mysql://localhost:3306/nowfood?allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=1234567890
#spring.datasource.password=dmbecon3
#remotemysql.com
#spring.datasource.url=jdbc:mysql://remotemysql.com/n7ORaVz6Od
#spring.datasource.username=n7ORaVz6Od
#spring.datasource.password=4YD0r0j5sb

# Logging JPA Queries to console
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
spring.jpa.properties.hibernate.format_sql=true

# Logging root
#logging.level.root=DEBUG
# JWT
# -----------------------
# login
jwt.token.prefix=Bearer
jwt.token.authorization=Authorization
# 30 minutes
jwt.token.expired-time=18000000
jwt.token.secret=396b5914-28c8-11ec-9621-0242ac130002
# naming
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming_strategy = org.hibernate.cfg.DefaultNamingStrategy


## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
# Hibernate ddl auto (create, create-drop, validate, update)
# Turn off automatic schema creation to avoid conflicts when using schema.sql to create tables
spring.jpa.hibernate.ddl-auto = update
#spring.jpa.hibernate.ddl-auto = none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.max_fetch_depth=3
spring.jpa.properties.hibernate.jdbc.fetch_size=50
spring.jpa.properties.hibernate.jdbc.batch_size=10
spring.jpa.properties.hibernate.c3p0.min_size=5
spring.jpa.properties.hibernate.c3p0.max_size=20
spring.jpa.properties.hibernate.c3p0.timeout=1800
spring.jpa.properties.hibernate.c3p0.max_statements=50

logging.level.org.hibernate = ERROR


#set true if want to use keycloak security, set if not set false
keycloak.use-resource-role-mappings = false
# Keycloak Enable CORS
keycloak.cors = true

# ENDPOINTS CORS CONFIGURATION (EndpointCorsProperties)
endpoints.cors.allow-credentials=false
endpoints.cors.allowed-headers=Authorization, Content-Type
#HTTP mà server cho phép client sử dụng
endpoints.cors.allowed-methods=POST, PUT, GET, OPTIONS, DELETE
#Mô tả thời gian hợp lệ của preflight request, nếu quá hạn, trình duyệt sẽ tạo môt pre-flight request mới.
endpoints.cors.max-age=3600
endpoints.cors.allowed-origins=*
localhost.path.client.user=http://localhost:3000/

################### JavaMail Configuration ##########################
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.protocol=smtp
spring.mail.username=nowfood.2021
spring.mail.password=Abcd1234@
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
user.confirm.url = http://localhost:8081/api/auth/confirm?token=

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-file-size=12MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
spring.servlet.multipart.max-request-size=64MB
# All files uploaded through the REST API will be stored in this directory
resources.images-directory = src/main/resources/images
order.ghn.token = 0beffee5-4eda-11ec-bde8-6690e1946f41